Every pipe in the loop connects to exactly two neighbors.
So tile S has exactly two pipes in the 4 cardinal directions, which must be part of the loop.
Just follow both of those connections until they converge on the same tile.

To follow the path through a tile you need to know from which direction you entered it.
Actually probably just need to follow one connection until you return to the start, then chop the the distance in half.
We know the tile we're on and the direction we want to move.
Add 1 to distance.
Get coords of tile in desired direction.
Get tile at those coords. If S => done.
Else determine exit direction based on tile and entrance direction and repeat.

Part 2

Sounds like flood fill.
There's no mechanism for crossing paths so the path must describe a closed region.
Slipping between pipes though...
Junk parts of pipe  (not necessarily connected or forming a loop) may exist. If they're inside the loop's bounded region they count.

Mark each tile that is part of the loop.
Flood-fill the interior.
Or is it just a matter of: from a given tile, if I can reach the boundaries of the map the tile is not within the loop?

X=part of loop
O=outside of loop
I=inside of loop
B=perhaps-imaginary extra 1-tile-wide padding around the perimeter of the map

I and O can never be adjacent.
I and B can never be adjacent.
X may be adjacent to anything.
O must be transitively adjacent to B via O.

I think slipping thru pipes is a problem. Yeah:
..........
.S------7.
.|F----7|.
.||OOOO||.
.||OOOO||.
.|L-7F-J|.
.|II||II|.
.L--JL--J.
..........

So each tile needs to encode the traversability in each of the 4 directions.
Uh except slipping between pipes is about *pairs* of *adjacent* tiles...

It is possible for a loop to enclose zero tiles:
....
.F7.
.||.
.LJ.
....

Or all tiles:
F-7
|.|
L-J
(. could be any random junk pipe piece instead)
Installing a perimeter of empty boundary tiles would give us a known starting point for flood fill.

Junk pipe tiles can't be traversed, only empty . tiles can be.
So slipping between pipes is only relevant for empty tiles.

If you expand each tile to like 3x3 or even 2x2 then flood fill will work.
Expand to 2x2 and extend the pipes to the right and down.

| => |
     |
- => --

F => F-
     |
J => J

7 => 7

L => L-

Really though all you need to do is replace all those symbols with like X or some single symbol representing "part of loop".
Replace all other symbols with . or whatever to represent "not part of loop".
We are guaranteed that the lower-right (or any rightmost or bottom-most) tile will be empty and outside of the loop.
Start the flood fill there. 
[Insert flood fill logic here...]
Once that's done we can count the number of empty tiles in odd rows and columns - those are the ones inside the loop.


